@model Arch.BussinessLayer.Dtos.CompetitonCreateDto
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}


<br />




@using (Html.BeginForm("Create", "Competition", FormMethod.Post, new { enctype = "multipart/form-data", id = "competitionForm" }))
{
    <h4 class="mb-2">Şimdi Yarışmanı Başlat </h4>
    <p class="mb-4">Yarışmanızı başlatın! Tasarımcıların sizin için ürettiği mimari çizimlere yarışma sonunda ulaşın.</p>
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">

                    <!-- Formun birinci kısmı -->

                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Proje İsmi</label>
                            @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Proje İsmi Giriniz" })
                            @Html.ValidationMessageFor(x => x.Name)
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Proje Tipi</label>
                            @Html.DropDownListFor(x => x.ProjectType, new List<SelectListItem>
                        {
                        new SelectListItem { Text = "Peyzaj", Value = "1" },
                        new SelectListItem { Text = "Tadilat", Value = "2" },
                        new SelectListItem { Text = "İç Mimari", Value = "3" },
                        new SelectListItem { Text = "Yeni Konut", Value = "4" }
                        }, "Seçiniz", new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.ProjectType)
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <br />
                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Proje Alanı</label>
                            @Html.DropDownListFor(x => x.Field, new List<SelectListItem>
                        {
                        new SelectListItem { Text = "0-60 m2", Value = "1" },
                        new SelectListItem { Text = "60-120 m2", Value = "2" },
                        new SelectListItem { Text = "120-360 m2", Value = "3" }
                        }, "Seçiniz", new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Field)
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />

                    <div class="card mb-3">
                        <div class="form-group">
                            <input type="file" id="fileInput" name="files" class="form-control" multiple />
                            <div id="fileValidationMessage" class="text-danger"></div>
                            @Html.ValidationMessageFor(x => x.files)
                        </div>
                    </div>


                    <br />
                    <br />


                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Bitiş Tarihi</label>
                            <input type="date" name="EndDate" class="form-control" required />
                            <span class="text-danger" id="endDateValidation"></span>
                        </div>
                    </div>

                    <br />                    
                    <br />                   
                    <br />                   
                    <br />

                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">İlham Linki 1</label>
                            @Html.TextBoxFor(x => x.InspirationAddress1, new { @class = "form-control", placeholder = "Tasarımcıların ilham alabileceği site adresini ekleyebilirsiniz." })
                            @* @Html.ValidationMessageFor(x => x.Name)*@
                        </div>
                    </div>
                    <br />
                    <br />
                   

                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">İlham Linki 2</label>
                            @Html.TextBoxFor(x => x.InspirationAddress2, new { @class = "form-control", placeholder = "Tasarımcıların ilham alabileceği site adresini ekleyebilirsiniz." })
                            @* @Html.ValidationMessageFor(x => x.Name)*@
                        </div>
                    </div>
                
               





                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">

                    <!-- Formun ikinci kısmı -->

                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Fiyat</label>
                            @Html.TextBoxFor(x => x.Price, new { @class = "form-control", placeholder = "Fiyat Giriniz", id = "Price" })
                            @Html.ValidationMessageFor(x => x.Price)
                        </div>
                    </div>
                    <br />
                    <br />

                    <br />

                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Proje Özeti</label>
                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", placeholder = "Proje Özeti Girin", rows = "8", oninput = "countWords(this)" })
                            @Html.ValidationMessageFor(x => x.Description)
                            <br />
                            <div id="wordCountMessage">En az 50 kelime girmelisiniz.</div>
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />

                    <div class="card mb-3 ">
                        <div class="form-group">
                            <label class="form-label">Hedefler</label>
                            @Html.TextAreaFor(x => x.Goal, new { @class = "form-control", placeholder = "Proje Hedeflerini Girin", rows = "5", oninput = "countWords(this)" })
                            @Html.ValidationMessageFor(x => x.Goal)
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />

                    <br />

                    <div class="card mb-3">
                        <div class="form-group">
                            <label class="form-label">Öncelikler</label>
                            @Html.TextAreaFor(x => x.Priorities, new { @class = "form-control", placeholder = "Proje Önceliklendirmelerini Girin", rows = "5", oninput = "countWords(this)" })
                            @Html.ValidationMessageFor(x => x.Priorities)
                  
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />




                </div>
            </div>
        </div>
        <div>
            <br>
            <br>

            <button class="btn btn-primary d-grid w-100" type="submit">Gönder</button>
        </div>


    </div>
}





<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
<style>

    .field-validation-error {
        color: red;
    }

    .card {
        width: 100%;
        margin: 0 auto;
    }

        .card.mb-3 {
            margin-bottom: 30px; /* Boşluk ayarı */
            height: 80px; /* Yükseklik ayarı */
        }

    .form-group {
        padding: 15px;
        border: 3px solid #87cefa;
        border-radius: 4px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        margin-bottom: 10px;
    }

        .form-group label {
            font-weight: bold;
        }

</style>
<script>
    $(function () {
        $('#Price').on('input', function () {
            var value = $(this).val().replace(/\./g, '');
            value = value.replace(/\B(?=(\d{3})+(?!\d))/g, '.');
            $(this).val(value);
        });

        $('form').on('submit', function () {
            var value = $('#Price').val().replace(/\./g, '');
            $('#Price').val(value);
        });
    });
</script>

<script>
    function countWords(textArea) {
        var description = textArea.value;
        var words = description.split(/\s+/).filter(function (word) {
            return word.length > 0;
        });

        var wordCount = words.length;
        var remainingWords = 50 - wordCount;

        var wordCountMessage = document.getElementById("wordCountMessage");
        wordCountMessage.textContent = remainingWords > 0 ? "En az " + remainingWords + " kelime girmelisiniz." : "";
    }
</script>

<script>
    document.getElementById("fileInput").addEventListener("change", function () {
        var fileInput = document.getElementById("fileInput");
        var fileValidationMessage = document.getElementById("fileValidationMessage");

        if (fileInput.files.length === 0) {
            fileValidationMessage.textContent = "Dosya yüklenmedi. Lütfen dosya seçiniz.";
        } else {
            fileValidationMessage.textContent = "";
        }
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var endDateInput = document.querySelector("input[name='EndDate']");
        var endDateValidation = document.getElementById("endDateValidation");

        var today = new Date();
        today.setDate(today.getDate() + 1);
        var minDate = today.toISOString().split("T")[0];
        endDateInput.setAttribute("min", minDate);

        endDateInput.addEventListener("input", function () {
            var selectedDate = new Date(this.value);
            var minimumDate = new Date();
            minimumDate.setDate(minimumDate.getDate() + 1);

            if (selectedDate < minimumDate) {
                endDateValidation.textContent = "";
                endDateInput.setCustomValidity("Proje bitiş tarihi en erken 1 gün sonra olabilir.");
            } else {
                endDateInput.setCustomValidity("");
            }
        });
    });
</script>